spring.datasource.driverClassName=com.mysql.jdbc.Driver
spring.datasource.username=batch
spring.datasource.password=batch
spring.datasource.url=jdbc:mysql://localhost:3306/batch?useSSL=false
spring.datasource.platform=mysql
spring.datasource.continueOnError=false
partition.requests=partition-requests
partition.replies=partition-replies
partition.chunk-size=1000
partition.grid-size=10
partition.column=ID
partition.table=PEOPLE
spring.batch.job.enabled=false
server.port=8080
logging.level.org.springframework.batch.item.database.JdbcPagingItemReader=DEBUG

#kafka\u5BF9\u5E94\u7684\u5730\u5740
spring.cloud.stream.kafka.binder.brokers=slave1:9092,slave2:9092,slave3:9092
#kafka\u7684zookeeper\u5BF9\u5E94\u7684\u5730\u5740
spring.cloud.stream.kafka.binder.zkNodes=slave1:2181,slave2:2181,slave3:2181
spring.cloud.stream.kafka.binder.autoAddPartitions=true

spring.cloud.stream.bindings.workerRequests.destination=${partition.requests}
spring.cloud.stream.bindings.workerRequests.group=${partition.requests}
spring.cloud.stream.bindings.workerRequests.durableSubscription=true
spring.cloud.stream.bindings.leaderRequests.destination=${partition.requests}
spring.cloud.stream.bindings.workerReplies.destination=${partition.replies}

spring.cloud.stream.bindings.workerRequests.binder: kafka
spring.cloud.stream.bindings.leaderRequests.binder: kafka
spring.cloud.stream.bindings.workerReplies.binder: kafka

#spring.cloud.stream.instanceCount = 2
#spring.cloud.stream.instanceIndex = 0
